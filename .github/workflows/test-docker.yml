name: CI

on:
  pull_request:
  push:
    branches:
      - master

jobs:
#  build_and_publish:
#    name: Docker Image
#    runs-on: ubuntu-20.04
#
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Create Docker Image
#      run: |
#        docker build -t edxapp_test -f test.Dockerfile .
#        docker tag edxapp_test ghcr.io/mzulqarnain1/edxapp:testing
#
#    - name: Upload Docker Image
#      run: |
#        echo ${{ secrets.CR_PASSWORD }} | docker login ghcr.io -u mzulqarnain1 --password-stdin
#        docker push ghcr.io/mzulqarnain1/edxapp:testing

  run-tests:
    name: Unit Tests
    #needs: build_and_publish
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        test-system: [ cms, common, lms, openedx ]
        #shard: [ 1, 2, 3 ]

    steps:
    - uses: actions/checkout@v2

    - name: Download Docker Image
      run: |
        echo ${{ secrets.CR_PASSWORD }} | docker login ghcr.io -u mzulqarnain1 --password-stdin
        docker pull ghcr.io/mzulqarnain1/edxapp:testing

    - name: Run Tests Docker Image
      continue-on-error: true
      env:
        TEST_SYSTEM: ${{ matrix.test-system }}
        #SHARD: ${{ matrix.shard }}
      run: |
        docker images
        docker-compose -f test.docker-compose.yml up
      # docker run --env TEST_SYSTEM=${{ matrix.test-system }} --env EDXAPP_TEST_MONGO_HOST="host.docker.internal" ghcr.io/mzulqarnain1/edxapp:testing bash -c 'source /edx/app/edxapp/venvs/edxapp/bin/activate && pytest $TEST_SYSTEM'
